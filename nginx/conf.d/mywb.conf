
server {

    listen              443 ssl;
    ssl_certificate     /etc/nginx/ssl/trans.crt;
    ssl_certificate_key /etc/nginx/ssl/trans.key;
    ssl_protocols       TLSv1.3;

    # listen 80;

    root /var/www/html/;
    server_name abouassi.42.fr;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

   
    location ~ ^/(tournament/trn_subscribe|tournament/is_inTourn|tournament/tourn_info|tournament/leave_trn|tournament/trn_history|tournament/matchresult|tournament/trn_stats)/ {
        
        proxy_pass http://tournament:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location ~ ^/(chat|chat/send_msg|chat/all_unread_msgs|chat/block)/ {
        proxy_pass http://chat:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /ws/chat/ {
        # rewrite ^/ws/game(/online.*)$ /ws$1 break;
        proxy_pass http://chat:8000;
        proxy_http_version 1.1;

        proxy_read_timeout 18000s;      # 5 hours (in seconds)
        proxy_send_timeout 18000s;      # 5 hours (in seconds)
        proxy_connect_timeout 18000s;   # 5 hours (in seconds)

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
    }

    location /api/ {
        if ($uri = /api/getUser/)
        {
            add_header Content-Type text/plain;
            return 403;
        }

        
        proxy_pass http://django:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;


     # Increase WebSocket timeout to 5 hours


        # Disable buffering for real-time WebSocket communication
        # proxy_buffering off;

    }

    location /ws/ {
        proxy_pass http://django:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";


        proxy_read_timeout 18000s;      # 5 hours (in seconds)
        proxy_send_timeout 18000s;      # 5 hours (in seconds)
        proxy_connect_timeout 18000s;   # 5 hours (in seconds)


        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;  # Optional, for better performance with WebSocket
    }

    location /ws/game_service/ {
        rewrite ^/ws/game_service/(.*)$ /ws/$1 break;
        proxy_pass http://game:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";


        proxy_read_timeout 18000s;      # 5 hours (in seconds)
        proxy_send_timeout 18000s;      # 5 hours (in seconds)
        proxy_connect_timeout 18000s;   # 5 hours (in seconds)
    }
    
    location /game_service/
    {
        if ($uri = /game_service/api/remove_game/)
        {
            add_header Content-Type text/plain;
            return 403;
        }
        if ($uri = /game_service/api/create/)
        {
            add_header Content-Type text/plain;
            return 403;
        }
        rewrite ^/game_service/(.*)$ /$1 break;
        proxy_pass http://game:8000;  # Or whatever upstream you are using
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;

        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "Upgrade";
    }

    location /ws/queue/
    {
        proxy_pass http://match_making:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";



        proxy_read_timeout 18000s;      # 5 hours (in seconds)
        proxy_send_timeout 18000s;      # 5 hours (in seconds)
        proxy_connect_timeout 18000s;   # 5 hours (in seconds)
    }

    location ~ ^/(ws/tourn|ws/tourn_info)/ {
        proxy_pass http://tournament:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";



        proxy_read_timeout 18000s;      # 5 hours (in seconds)
        proxy_send_timeout 18000s;      # 5 hours (in seconds)
        proxy_connect_timeout 18000s;   # 5 hours (in seconds)
    }


    location /media/ {
        alias /var/www/html/media;  # Update this path to your actual media root
    }
    
      # Serve .js.map files with the correct MIME type and enable gzip compression
    # location ~* \.js\.map$ {
    #     types {
    #         application/json map;
    #     }
    #     gzip_static on;
    #     expires 1y;
    #     add_header Cache-Control "public";
    # }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|ttf|woff|woff2|webp|avif)$ {
        root /var/www/html;
        add_header Access-Control-Allow-Origin *;
        try_files $uri = /media/default.jpg;
        access_log off;
        log_not_found off;
    }

    location ~* \.js$ {
        add_header Content-Type application/javascript;
    }

    location ~* \.css$ {
        add_header Content-Type text/css;
    }

    location ~* \.ttf$ {
        add_header Content-Type font/ttf;
    }

    location ~* \.woff$ {
        add_header Content-Type font/woff;
    }

    location ~* \.woff2$ {
        add_header Content-Type font/woff2;
    }

}
    # Proxy pass for API endpoints
    # location /api/ {
    #     proxy_pass http://django:8000;  # Change this to your Django application server
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     add_header Access-Control-Allow-Origin *;
    #     add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
    #     add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
    #     add_header Access-Control-Allow-Credentials true;

    #     # Handle preflight requests
    #     if ($request_method = 'OPTIONS') {
    #         add_header Access-Control-Allow-Origin '*';
    #         add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
    #         add_header Access-Control-Allow-Headers 'Content-Type, Authorization';
    #         add_header Content-Length 0;
    #         add_header Content-Type text/plain;
    #         return 204;
    #     }
    # }
